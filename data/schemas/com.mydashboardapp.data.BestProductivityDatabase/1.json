{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "959353e1bc691069bc5e477138dc8a65",
    "entities": [
      {
        "tableName": "foods",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `brand` TEXT, `servingSize` REAL NOT NULL, `caloriesPerServing` INTEGER NOT NULL, `proteinPerServing` REAL NOT NULL, `carbsPerServing` REAL NOT NULL, `fatPerServing` REAL NOT NULL, `fiberPerServing` REAL, `sugarPerServing` REAL, `sodiumPerServing` REAL, `barcode` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brand",
            "columnName": "brand",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "servingSize",
            "columnName": "servingSize",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "caloriesPerServing",
            "columnName": "caloriesPerServing",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "proteinPerServing",
            "columnName": "proteinPerServing",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "carbsPerServing",
            "columnName": "carbsPerServing",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fatPerServing",
            "columnName": "fatPerServing",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fiberPerServing",
            "columnName": "fiberPerServing",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "sugarPerServing",
            "columnName": "sugarPerServing",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "sodiumPerServing",
            "columnName": "sodiumPerServing",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ingredients",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `category` TEXT, `caloriesPerGram` REAL NOT NULL, `proteinPerGram` REAL NOT NULL, `carbsPerGram` REAL NOT NULL, `fatPerGram` REAL NOT NULL, `fiberPerGram` REAL, `sugarPerGram` REAL, `sodiumPerGram` REAL, `isAllergen` INTEGER NOT NULL, `allergenInfo` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caloriesPerGram",
            "columnName": "caloriesPerGram",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "proteinPerGram",
            "columnName": "proteinPerGram",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "carbsPerGram",
            "columnName": "carbsPerGram",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fatPerGram",
            "columnName": "fatPerGram",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "fiberPerGram",
            "columnName": "fiberPerGram",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "sugarPerGram",
            "columnName": "sugarPerGram",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "sodiumPerGram",
            "columnName": "sodiumPerGram",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "isAllergen",
            "columnName": "isAllergen",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allergenInfo",
            "columnName": "allergenInfo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "meals",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `mealType` TEXT NOT NULL, `dateConsumed` INTEGER NOT NULL, `totalCalories` INTEGER NOT NULL, `totalProtein` REAL NOT NULL, `totalCarbs` REAL NOT NULL, `totalFat` REAL NOT NULL, `totalFiber` REAL, `totalSugar` REAL, `totalSodium` REAL, `notes` TEXT, `photoUrl` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "mealType",
            "columnName": "mealType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dateConsumed",
            "columnName": "dateConsumed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalCalories",
            "columnName": "totalCalories",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalProtein",
            "columnName": "totalProtein",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalCarbs",
            "columnName": "totalCarbs",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalFat",
            "columnName": "totalFat",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalFiber",
            "columnName": "totalFiber",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "totalSugar",
            "columnName": "totalSugar",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "totalSodium",
            "columnName": "totalSodium",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photoUrl",
            "columnName": "photoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "meal_food_cross_ref",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`mealId` INTEGER NOT NULL, `foodId` INTEGER NOT NULL, `quantity` REAL NOT NULL, `weight` REAL, `notes` TEXT, PRIMARY KEY(`mealId`, `foodId`), FOREIGN KEY(`mealId`) REFERENCES `meals`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`foodId`) REFERENCES `foods`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "mealId",
            "columnName": "mealId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "foodId",
            "columnName": "foodId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "mealId",
            "foodId"
          ]
        },
        "indices": [
          {
            "name": "index_meal_food_cross_ref_mealId",
            "unique": false,
            "columnNames": [
              "mealId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meal_food_cross_ref_mealId` ON `${TABLE_NAME}` (`mealId`)"
          },
          {
            "name": "index_meal_food_cross_ref_foodId",
            "unique": false,
            "columnNames": [
              "foodId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meal_food_cross_ref_foodId` ON `${TABLE_NAME}` (`foodId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meals",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "mealId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "foods",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "foodId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "exercises",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `category` TEXT NOT NULL, `muscleGroup` TEXT, `equipment` TEXT, `description` TEXT, `instructions` TEXT, `difficulty` TEXT, `caloriesPerMinute` REAL, `videoUrl` TEXT, `imageUrl` TEXT, `isCustom` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "muscleGroup",
            "columnName": "muscleGroup",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "equipment",
            "columnName": "equipment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "instructions",
            "columnName": "instructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "difficulty",
            "columnName": "difficulty",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "caloriesPerMinute",
            "columnName": "caloriesPerMinute",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "videoUrl",
            "columnName": "videoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCustom",
            "columnName": "isCustom",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "workouts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `date` INTEGER NOT NULL, `startTime` INTEGER, `endTime` INTEGER, `duration` INTEGER, `totalCaloriesBurned` INTEGER, `workoutType` TEXT, `intensity` TEXT, `notes` TEXT, `location` TEXT, `isTemplate` INTEGER NOT NULL, `templateId` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startTime",
            "columnName": "startTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "endTime",
            "columnName": "endTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "totalCaloriesBurned",
            "columnName": "totalCaloriesBurned",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "workoutType",
            "columnName": "workoutType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "intensity",
            "columnName": "intensity",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isTemplate",
            "columnName": "isTemplate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "templateId",
            "columnName": "templateId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `workoutExerciseId` INTEGER NOT NULL, `setNumber` INTEGER NOT NULL, `reps` INTEGER, `weight` REAL, `duration` INTEGER, `distance` REAL, `restTime` INTEGER, `rpe` INTEGER, `notes` TEXT, `isCompleted` INTEGER NOT NULL, `completedAt` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`workoutExerciseId`) REFERENCES `workout_exercise_cross_ref`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workoutExerciseId",
            "columnName": "workoutExerciseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "setNumber",
            "columnName": "setNumber",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reps",
            "columnName": "reps",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "distance",
            "columnName": "distance",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "restTime",
            "columnName": "restTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rpe",
            "columnName": "rpe",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_sets_workoutExerciseId",
            "unique": false,
            "columnNames": [
              "workoutExerciseId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_sets_workoutExerciseId` ON `${TABLE_NAME}` (`workoutExerciseId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "workout_exercise_cross_ref",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "workoutExerciseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "workout_exercise_cross_ref",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `workoutId` INTEGER NOT NULL, `exerciseId` INTEGER NOT NULL, `orderInWorkout` INTEGER NOT NULL, `targetSets` INTEGER, `targetReps` INTEGER, `targetWeight` REAL, `targetDuration` INTEGER, `targetDistance` REAL, `restBetweenSets` INTEGER, `notes` TEXT, `isSuperset` INTEGER NOT NULL, `supersetGroup` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`workoutId`) REFERENCES `workouts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`exerciseId`) REFERENCES `exercises`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "workoutId",
            "columnName": "workoutId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "exerciseId",
            "columnName": "exerciseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "orderInWorkout",
            "columnName": "orderInWorkout",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "targetSets",
            "columnName": "targetSets",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetReps",
            "columnName": "targetReps",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetWeight",
            "columnName": "targetWeight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "targetDuration",
            "columnName": "targetDuration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "targetDistance",
            "columnName": "targetDistance",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "restBetweenSets",
            "columnName": "restBetweenSets",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSuperset",
            "columnName": "isSuperset",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "supersetGroup",
            "columnName": "supersetGroup",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_workout_exercise_cross_ref_workoutId",
            "unique": false,
            "columnNames": [
              "workoutId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_exercise_cross_ref_workoutId` ON `${TABLE_NAME}` (`workoutId`)"
          },
          {
            "name": "index_workout_exercise_cross_ref_exerciseId",
            "unique": false,
            "columnNames": [
              "exerciseId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_workout_exercise_cross_ref_exerciseId` ON `${TABLE_NAME}` (`exerciseId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "workouts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "workoutId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "exercises",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "exerciseId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "tasks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT NOT NULL, `description` TEXT, `isCompleted` INTEGER NOT NULL, `priority` TEXT, `status` TEXT, `dueDate` INTEGER, `completedAt` INTEGER, `estimatedTimeMinutes` INTEGER, `actualTimeMinutes` INTEGER, `goalId` INTEGER, `parentTaskId` INTEGER, `category` TEXT, `tags` TEXT, `notes` TEXT, `reminderAt` INTEGER, `recurrenceRule` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`goalId`) REFERENCES `goals`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`parentTaskId`) REFERENCES `tasks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dueDate",
            "columnName": "dueDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "estimatedTimeMinutes",
            "columnName": "estimatedTimeMinutes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "actualTimeMinutes",
            "columnName": "actualTimeMinutes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "goalId",
            "columnName": "goalId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "parentTaskId",
            "columnName": "parentTaskId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reminderAt",
            "columnName": "reminderAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "recurrenceRule",
            "columnName": "recurrenceRule",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_tasks_goalId",
            "unique": false,
            "columnNames": [
              "goalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_goalId` ON `${TABLE_NAME}` (`goalId`)"
          },
          {
            "name": "index_tasks_parentTaskId",
            "unique": false,
            "columnNames": [
              "parentTaskId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tasks_parentTaskId` ON `${TABLE_NAME}` (`parentTaskId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "goals",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "goalId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "tasks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentTaskId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "goals",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `title` TEXT NOT NULL, `description` TEXT, `category` TEXT, `targetDate` INTEGER, `isCompleted` INTEGER NOT NULL, `completedAt` INTEGER, `progress` REAL NOT NULL, `priority` TEXT, `measurable` TEXT, `specificOutcome` TEXT, `timeframe` TEXT, `obstacles` TEXT, `resources` TEXT, `motivation` TEXT, `milestones` TEXT, `isArchived` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "targetDate",
            "columnName": "targetDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "completedAt",
            "columnName": "completedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "progress",
            "columnName": "progress",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "measurable",
            "columnName": "measurable",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "specificOutcome",
            "columnName": "specificOutcome",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timeframe",
            "columnName": "timeframe",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "obstacles",
            "columnName": "obstacles",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "resources",
            "columnName": "resources",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "motivation",
            "columnName": "motivation",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "milestones",
            "columnName": "milestones",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isArchived",
            "columnName": "isArchived",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "time_logs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `startTime` INTEGER NOT NULL, `endTime` INTEGER, `duration` INTEGER, `taskId` INTEGER, `goalId` INTEGER, `activity` TEXT NOT NULL, `category` TEXT, `isBreak` INTEGER NOT NULL, `isPomodoro` INTEGER NOT NULL, `pomodoroNumber` INTEGER, `productivity` INTEGER, `mood` TEXT, `location` TEXT, `notes` TEXT, `tags` TEXT, `isManual` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`taskId`) REFERENCES `tasks`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`goalId`) REFERENCES `goals`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startTime",
            "columnName": "startTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endTime",
            "columnName": "endTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "taskId",
            "columnName": "taskId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "goalId",
            "columnName": "goalId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "activity",
            "columnName": "activity",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isBreak",
            "columnName": "isBreak",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPomodoro",
            "columnName": "isPomodoro",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pomodoroNumber",
            "columnName": "pomodoroNumber",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "productivity",
            "columnName": "productivity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mood",
            "columnName": "mood",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isManual",
            "columnName": "isManual",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_time_logs_taskId",
            "unique": false,
            "columnNames": [
              "taskId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_time_logs_taskId` ON `${TABLE_NAME}` (`taskId`)"
          },
          {
            "name": "index_time_logs_goalId",
            "unique": false,
            "columnNames": [
              "goalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_time_logs_goalId` ON `${TABLE_NAME}` (`goalId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "tasks",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "taskId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "goals",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "goalId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "pomodoro_sessions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `startTime` INTEGER NOT NULL, `endTime` INTEGER, `durationMinutes` INTEGER NOT NULL, `type` TEXT NOT NULL, `taskId` INTEGER, `goalId` INTEGER, `isCompleted` INTEGER NOT NULL, `wasInterrupted` INTEGER NOT NULL, `interruptionReason` TEXT, `productivity` INTEGER, `mood` TEXT, `notes` TEXT, `tags` TEXT, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`taskId`) REFERENCES `tasks`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`goalId`) REFERENCES `goals`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startTime",
            "columnName": "startTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endTime",
            "columnName": "endTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "durationMinutes",
            "columnName": "durationMinutes",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "taskId",
            "columnName": "taskId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "goalId",
            "columnName": "goalId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isCompleted",
            "columnName": "isCompleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "wasInterrupted",
            "columnName": "wasInterrupted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "interruptionReason",
            "columnName": "interruptionReason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "productivity",
            "columnName": "productivity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "mood",
            "columnName": "mood",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_pomodoro_sessions_taskId",
            "unique": false,
            "columnNames": [
              "taskId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pomodoro_sessions_taskId` ON `${TABLE_NAME}` (`taskId`)"
          },
          {
            "name": "index_pomodoro_sessions_goalId",
            "unique": false,
            "columnNames": [
              "goalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pomodoro_sessions_goalId` ON `${TABLE_NAME}` (`goalId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "tasks",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "taskId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "goals",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "goalId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "streaks",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `type` TEXT NOT NULL, `goalId` INTEGER, `taskId` INTEGER, `currentStreak` INTEGER NOT NULL, `longestStreak` INTEGER NOT NULL, `totalCount` INTEGER NOT NULL, `startDate` INTEGER NOT NULL, `lastCompletedDate` INTEGER, `frequency` TEXT NOT NULL, `targetValue` INTEGER NOT NULL, `unit` TEXT, `isActive` INTEGER NOT NULL, `reminderTime` INTEGER, `category` TEXT, `priority` TEXT, `notes` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`goalId`) REFERENCES `goals`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`taskId`) REFERENCES `tasks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "goalId",
            "columnName": "goalId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "taskId",
            "columnName": "taskId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "currentStreak",
            "columnName": "currentStreak",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "longestStreak",
            "columnName": "longestStreak",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalCount",
            "columnName": "totalCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastCompletedDate",
            "columnName": "lastCompletedDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "frequency",
            "columnName": "frequency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "targetValue",
            "columnName": "targetValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reminderTime",
            "columnName": "reminderTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_streaks_goalId",
            "unique": false,
            "columnNames": [
              "goalId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_streaks_goalId` ON `${TABLE_NAME}` (`goalId`)"
          },
          {
            "name": "index_streaks_taskId",
            "unique": false,
            "columnNames": [
              "taskId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_streaks_taskId` ON `${TABLE_NAME}` (`taskId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "goals",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "goalId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "tasks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "taskId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "streak_logs",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `streakId` INTEGER NOT NULL, `date` INTEGER NOT NULL, `value` INTEGER NOT NULL, `notes` TEXT, `mood` TEXT, `quality` INTEGER, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`streakId`) REFERENCES `streaks`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "streakId",
            "columnName": "streakId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "value",
            "columnName": "value",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mood",
            "columnName": "mood",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "quality",
            "columnName": "quality",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_streak_logs_streakId",
            "unique": false,
            "columnNames": [
              "streakId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_streak_logs_streakId` ON `${TABLE_NAME}` (`streakId`)"
          },
          {
            "name": "index_streak_logs_date",
            "unique": false,
            "columnNames": [
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_streak_logs_date` ON `${TABLE_NAME}` (`date`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "streaks",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "streakId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "accounts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `subtype` TEXT, `institution` TEXT, `accountNumber` TEXT, `currency` TEXT NOT NULL, `currentBalance` REAL NOT NULL, `availableBalance` REAL, `creditLimit` REAL, `interestRate` REAL, `minimumBalance` REAL, `monthlyFee` REAL, `isActive` INTEGER NOT NULL, `isHidden` INTEGER NOT NULL, `color` TEXT, `icon` TEXT, `notes` TEXT, `openedAt` INTEGER, `lastSyncAt` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "subtype",
            "columnName": "subtype",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "institution",
            "columnName": "institution",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accountNumber",
            "columnName": "accountNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "currentBalance",
            "columnName": "currentBalance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "availableBalance",
            "columnName": "availableBalance",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "creditLimit",
            "columnName": "creditLimit",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "interestRate",
            "columnName": "interestRate",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "minimumBalance",
            "columnName": "minimumBalance",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "monthlyFee",
            "columnName": "monthlyFee",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isHidden",
            "columnName": "isHidden",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "openedAt",
            "columnName": "openedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastSyncAt",
            "columnName": "lastSyncAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `accountId` INTEGER NOT NULL, `amount` REAL NOT NULL, `currency` TEXT NOT NULL, `description` TEXT NOT NULL, `category` TEXT, `subcategory` TEXT, `date` INTEGER NOT NULL, `type` TEXT NOT NULL, `status` TEXT NOT NULL, `merchant` TEXT, `location` TEXT, `reference` TEXT, `tags` TEXT, `isRecurring` INTEGER NOT NULL, `recurringGroupId` TEXT, `notes` TEXT, `receiptUrl` TEXT, `isManual` INTEGER NOT NULL, `externalId` TEXT, `balanceAfter` REAL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subcategory",
            "columnName": "subcategory",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "merchant",
            "columnName": "merchant",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "location",
            "columnName": "location",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reference",
            "columnName": "reference",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRecurring",
            "columnName": "isRecurring",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "recurringGroupId",
            "columnName": "recurringGroupId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "receiptUrl",
            "columnName": "receiptUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isManual",
            "columnName": "isManual",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "externalId",
            "columnName": "externalId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "balanceAfter",
            "columnName": "balanceAfter",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_transactions_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_accountId` ON `${TABLE_NAME}` (`accountId`)"
          },
          {
            "name": "index_transactions_date",
            "unique": false,
            "columnNames": [
              "date"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_date` ON `${TABLE_NAME}` (`date`)"
          },
          {
            "name": "index_transactions_category",
            "unique": false,
            "columnNames": [
              "category"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_transactions_category` ON `${TABLE_NAME}` (`category`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "investments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `accountId` INTEGER NOT NULL, `symbol` TEXT NOT NULL, `name` TEXT NOT NULL, `type` TEXT NOT NULL, `quantity` REAL NOT NULL, `purchasePrice` REAL NOT NULL, `currentPrice` REAL, `currency` TEXT NOT NULL, `sector` TEXT, `industry` TEXT, `exchange` TEXT, `purchaseDate` INTEGER, `lastPriceUpdate` INTEGER, `dividendYield` REAL, `expenseRatio` REAL, `beta` REAL, `peRatio` REAL, `marketCap` INTEGER, `notes` TEXT, `tags` TEXT, `isWatchlist` INTEGER NOT NULL, `alertPriceHigh` REAL, `alertPriceLow` REAL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`accountId`) REFERENCES `accounts`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accountId",
            "columnName": "accountId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "symbol",
            "columnName": "symbol",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "purchasePrice",
            "columnName": "purchasePrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentPrice",
            "columnName": "currentPrice",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sector",
            "columnName": "sector",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "industry",
            "columnName": "industry",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "exchange",
            "columnName": "exchange",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "purchaseDate",
            "columnName": "purchaseDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastPriceUpdate",
            "columnName": "lastPriceUpdate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "dividendYield",
            "columnName": "dividendYield",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "expenseRatio",
            "columnName": "expenseRatio",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "beta",
            "columnName": "beta",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "peRatio",
            "columnName": "peRatio",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "marketCap",
            "columnName": "marketCap",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isWatchlist",
            "columnName": "isWatchlist",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "alertPriceHigh",
            "columnName": "alertPriceHigh",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "alertPriceLow",
            "columnName": "alertPriceLow",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_investments_accountId",
            "unique": false,
            "columnNames": [
              "accountId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_investments_accountId` ON `${TABLE_NAME}` (`accountId`)"
          },
          {
            "name": "index_investments_symbol",
            "unique": false,
            "columnNames": [
              "symbol"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_investments_symbol` ON `${TABLE_NAME}` (`symbol`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "accounts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "accountId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "price_snapshots",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `investmentId` INTEGER, `symbol` TEXT NOT NULL, `price` REAL NOT NULL, `currency` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `volume` INTEGER, `high` REAL, `low` REAL, `open` REAL, `close` REAL, `change` REAL, `changePercent` REAL, `marketCap` INTEGER, `peRatio` REAL, `dividendYield` REAL, `source` TEXT, `isRealTime` INTEGER NOT NULL, `notes` TEXT, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`investmentId`) REFERENCES `investments`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "investmentId",
            "columnName": "investmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "symbol",
            "columnName": "symbol",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "volume",
            "columnName": "volume",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "high",
            "columnName": "high",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "low",
            "columnName": "low",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "open",
            "columnName": "open",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "close",
            "columnName": "close",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "change",
            "columnName": "change",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "changePercent",
            "columnName": "changePercent",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "marketCap",
            "columnName": "marketCap",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "peRatio",
            "columnName": "peRatio",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "dividendYield",
            "columnName": "dividendYield",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRealTime",
            "columnName": "isRealTime",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_price_snapshots_investmentId",
            "unique": false,
            "columnNames": [
              "investmentId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_price_snapshots_investmentId` ON `${TABLE_NAME}` (`investmentId`)"
          },
          {
            "name": "index_price_snapshots_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_price_snapshots_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          },
          {
            "name": "index_price_snapshots_symbol",
            "unique": false,
            "columnNames": [
              "symbol"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_price_snapshots_symbol` ON `${TABLE_NAME}` (`symbol`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "investments",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "investmentId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "budget_envelopes",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `category` TEXT NOT NULL, `monthlyLimit` REAL NOT NULL, `currentBalance` REAL NOT NULL, `spent` REAL NOT NULL, `rolloverEnabled` INTEGER NOT NULL, `rolloverLimit` REAL, `priority` INTEGER NOT NULL, `color` TEXT, `icon` TEXT, `isActive` INTEGER NOT NULL, `notes` TEXT, `alertThreshold` REAL, `autoRefill` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "monthlyLimit",
            "columnName": "monthlyLimit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentBalance",
            "columnName": "currentBalance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "spent",
            "columnName": "spent",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "rolloverEnabled",
            "columnName": "rolloverEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rolloverLimit",
            "columnName": "rolloverLimit",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "priority",
            "columnName": "priority",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "alertThreshold",
            "columnName": "alertThreshold",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "autoRefill",
            "columnName": "autoRefill",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "budget_periods",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `year` INTEGER NOT NULL, `month` INTEGER NOT NULL, `startDate` INTEGER NOT NULL, `endDate` INTEGER NOT NULL, `totalIncome` REAL NOT NULL, `totalAllocated` REAL NOT NULL, `totalSpent` REAL NOT NULL, `unallocated` REAL NOT NULL, `isActive` INTEGER NOT NULL, `isClosed` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "month",
            "columnName": "month",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalIncome",
            "columnName": "totalIncome",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalAllocated",
            "columnName": "totalAllocated",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "totalSpent",
            "columnName": "totalSpent",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "unallocated",
            "columnName": "unallocated",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isClosed",
            "columnName": "isClosed",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "envelope_allocations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `envelopeId` INTEGER NOT NULL, `budgetPeriodId` INTEGER NOT NULL, `allocatedAmount` REAL NOT NULL, `spentAmount` REAL NOT NULL, `rolledOverFrom` REAL NOT NULL, `rolledOverTo` REAL NOT NULL, `remainingBalance` REAL NOT NULL, `transactionCount` INTEGER NOT NULL, `lastTransactionDate` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`envelopeId`) REFERENCES `budget_envelopes`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`budgetPeriodId`) REFERENCES `budget_periods`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "envelopeId",
            "columnName": "envelopeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "budgetPeriodId",
            "columnName": "budgetPeriodId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "allocatedAmount",
            "columnName": "allocatedAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "spentAmount",
            "columnName": "spentAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "rolledOverFrom",
            "columnName": "rolledOverFrom",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "rolledOverTo",
            "columnName": "rolledOverTo",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "remainingBalance",
            "columnName": "remainingBalance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastTransactionDate",
            "columnName": "lastTransactionDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_envelope_allocations_envelopeId",
            "unique": false,
            "columnNames": [
              "envelopeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_envelope_allocations_envelopeId` ON `${TABLE_NAME}` (`envelopeId`)"
          },
          {
            "name": "index_envelope_allocations_budgetPeriodId",
            "unique": false,
            "columnNames": [
              "budgetPeriodId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_envelope_allocations_budgetPeriodId` ON `${TABLE_NAME}` (`budgetPeriodId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "budget_envelopes",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "envelopeId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "budget_periods",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "budgetPeriodId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "envelope_transactions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `envelopeId` INTEGER NOT NULL, `transactionId` INTEGER NOT NULL, `budgetPeriodId` INTEGER NOT NULL, `amount` REAL NOT NULL, `type` TEXT NOT NULL, `description` TEXT, `date` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`envelopeId`) REFERENCES `budget_envelopes`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`transactionId`) REFERENCES `transactions`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`budgetPeriodId`) REFERENCES `budget_periods`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "envelopeId",
            "columnName": "envelopeId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionId",
            "columnName": "transactionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "budgetPeriodId",
            "columnName": "budgetPeriodId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_envelope_transactions_envelopeId",
            "unique": false,
            "columnNames": [
              "envelopeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_envelope_transactions_envelopeId` ON `${TABLE_NAME}` (`envelopeId`)"
          },
          {
            "name": "index_envelope_transactions_transactionId",
            "unique": false,
            "columnNames": [
              "transactionId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_envelope_transactions_transactionId` ON `${TABLE_NAME}` (`transactionId`)"
          },
          {
            "name": "index_envelope_transactions_budgetPeriodId",
            "unique": false,
            "columnNames": [
              "budgetPeriodId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_envelope_transactions_budgetPeriodId` ON `${TABLE_NAME}` (`budgetPeriodId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "budget_envelopes",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "envelopeId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "transactions",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "transactionId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "budget_periods",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "budgetPeriodId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `category` TEXT, `subcategory` TEXT, `brand` TEXT, `model` TEXT, `sku` TEXT, `barcode` TEXT, `color` TEXT, `size` TEXT, `weight` REAL, `dimensions` TEXT, `material` TEXT, `purchasePrice` REAL, `currentValue` REAL, `currency` TEXT NOT NULL, `purchaseDate` INTEGER, `warrantyExpiry` INTEGER, `condition` TEXT, `serialNumber` TEXT, `notes` TEXT, `tags` TEXT, `imageUrl` TEXT, `manualUrl` TEXT, `isConsumable` INTEGER NOT NULL, `minimumStock` INTEGER, `maximumStock` INTEGER, `reorderPoint` INTEGER, `isActive` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subcategory",
            "columnName": "subcategory",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "brand",
            "columnName": "brand",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "model",
            "columnName": "model",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sku",
            "columnName": "sku",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "size",
            "columnName": "size",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "weight",
            "columnName": "weight",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "dimensions",
            "columnName": "dimensions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "material",
            "columnName": "material",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "purchasePrice",
            "columnName": "purchasePrice",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currentValue",
            "columnName": "currentValue",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "purchaseDate",
            "columnName": "purchaseDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "warrantyExpiry",
            "columnName": "warrantyExpiry",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "condition",
            "columnName": "condition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "serialNumber",
            "columnName": "serialNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "manualUrl",
            "columnName": "manualUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isConsumable",
            "columnName": "isConsumable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minimumStock",
            "columnName": "minimumStock",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maximumStock",
            "columnName": "maximumStock",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "reorderPoint",
            "columnName": "reorderPoint",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "locations",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `type` TEXT, `parentLocationId` INTEGER, `address` TEXT, `coordinates` TEXT, `qrCode` TEXT, `color` TEXT, `icon` TEXT, `capacity` TEXT, `temperature` TEXT, `humidity` TEXT, `accessInstructions` TEXT, `securityLevel` TEXT, `notes` TEXT, `imageUrl` TEXT, `isActive` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`parentLocationId`) REFERENCES `locations`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentLocationId",
            "columnName": "parentLocationId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coordinates",
            "columnName": "coordinates",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "qrCode",
            "columnName": "qrCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "capacity",
            "columnName": "capacity",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "temperature",
            "columnName": "temperature",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "humidity",
            "columnName": "humidity",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "accessInstructions",
            "columnName": "accessInstructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "securityLevel",
            "columnName": "securityLevel",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_locations_parentLocationId",
            "unique": false,
            "columnNames": [
              "parentLocationId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_locations_parentLocationId` ON `${TABLE_NAME}` (`parentLocationId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "locations",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "parentLocationId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "stock_movements",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `itemId` INTEGER NOT NULL, `type` TEXT NOT NULL, `quantity` INTEGER NOT NULL, `fromLocationId` INTEGER, `toLocationId` INTEGER, `timestamp` INTEGER NOT NULL, `reason` TEXT, `reference` TEXT, `cost` REAL, `totalCost` REAL, `currency` TEXT NOT NULL, `supplier` TEXT, `recipient` TEXT, `batchNumber` TEXT, `expiryDate` INTEGER, `condition` TEXT, `notes` TEXT, `documentUrl` TEXT, `isVerified` INTEGER NOT NULL, `verifiedBy` TEXT, `verifiedAt` INTEGER, `createdBy` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`itemId`) REFERENCES `items`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`fromLocationId`) REFERENCES `locations`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL , FOREIGN KEY(`toLocationId`) REFERENCES `locations`(`id`) ON UPDATE NO ACTION ON DELETE SET NULL )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromLocationId",
            "columnName": "fromLocationId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "toLocationId",
            "columnName": "toLocationId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reason",
            "columnName": "reason",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reference",
            "columnName": "reference",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cost",
            "columnName": "cost",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "totalCost",
            "columnName": "totalCost",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "supplier",
            "columnName": "supplier",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "recipient",
            "columnName": "recipient",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "batchNumber",
            "columnName": "batchNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "expiryDate",
            "columnName": "expiryDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "condition",
            "columnName": "condition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "documentUrl",
            "columnName": "documentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isVerified",
            "columnName": "isVerified",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "verifiedBy",
            "columnName": "verifiedBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verifiedAt",
            "columnName": "verifiedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdBy",
            "columnName": "createdBy",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_stock_movements_itemId",
            "unique": false,
            "columnNames": [
              "itemId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_stock_movements_itemId` ON `${TABLE_NAME}` (`itemId`)"
          },
          {
            "name": "index_stock_movements_fromLocationId",
            "unique": false,
            "columnNames": [
              "fromLocationId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_stock_movements_fromLocationId` ON `${TABLE_NAME}` (`fromLocationId`)"
          },
          {
            "name": "index_stock_movements_toLocationId",
            "unique": false,
            "columnNames": [
              "toLocationId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_stock_movements_toLocationId` ON `${TABLE_NAME}` (`toLocationId`)"
          },
          {
            "name": "index_stock_movements_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_stock_movements_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "items",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "itemId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "locations",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "fromLocationId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "locations",
            "onDelete": "SET NULL",
            "onUpdate": "NO ACTION",
            "columns": [
              "toLocationId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "affiliate_links",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `itemId` INTEGER NOT NULL, `merchant` TEXT NOT NULL, `originalUrl` TEXT NOT NULL, `affiliateUrl` TEXT NOT NULL, `price` REAL, `currency` TEXT NOT NULL, `availability` TEXT, `rating` REAL, `reviewCount` INTEGER, `description` TEXT, `imageUrl` TEXT, `isActive` INTEGER NOT NULL, `isPrimary` INTEGER NOT NULL, `commission` REAL, `clickCount` INTEGER NOT NULL, `lastClickAt` INTEGER, `lastPriceUpdate` INTEGER, `priceHistory` TEXT, `notes` TEXT, `tags` TEXT, `trackingId` TEXT, `campaignId` TEXT, `couponCode` TEXT, `expiresAt` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, FOREIGN KEY(`itemId`) REFERENCES `items`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "itemId",
            "columnName": "itemId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "merchant",
            "columnName": "merchant",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalUrl",
            "columnName": "originalUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "affiliateUrl",
            "columnName": "affiliateUrl",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "availability",
            "columnName": "availability",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "reviewCount",
            "columnName": "reviewCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrimary",
            "columnName": "isPrimary",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "commission",
            "columnName": "commission",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "clickCount",
            "columnName": "clickCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastClickAt",
            "columnName": "lastClickAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastPriceUpdate",
            "columnName": "lastPriceUpdate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "priceHistory",
            "columnName": "priceHistory",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "trackingId",
            "columnName": "trackingId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "campaignId",
            "columnName": "campaignId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "couponCode",
            "columnName": "couponCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "expiresAt",
            "columnName": "expiresAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_affiliate_links_itemId",
            "unique": false,
            "columnNames": [
              "itemId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_affiliate_links_itemId` ON `${TABLE_NAME}` (`itemId`)"
          },
          {
            "name": "index_affiliate_links_merchant",
            "unique": false,
            "columnNames": [
              "merchant"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_affiliate_links_merchant` ON `${TABLE_NAME}` (`merchant`)"
          },
          {
            "name": "index_affiliate_links_isActive",
            "unique": false,
            "columnNames": [
              "isActive"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_affiliate_links_isActive` ON `${TABLE_NAME}` (`isActive`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "items",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "itemId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "prompt_history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userPrompt` TEXT NOT NULL, `aiResponse` TEXT NOT NULL, `model` TEXT, `provider` TEXT, `context` TEXT, `category` TEXT, `tokens` INTEGER, `cost` REAL, `currency` TEXT NOT NULL, `responseTime` INTEGER, `quality` INTEGER, `isBookmarked` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, `tags` TEXT, `sessionId` TEXT, `conversationId` TEXT, `parentId` INTEGER, `temperature` REAL, `maxTokens` INTEGER, `systemPrompt` TEXT, `isSuccessful` INTEGER NOT NULL, `errorMessage` TEXT, `metadata` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userPrompt",
            "columnName": "userPrompt",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "aiResponse",
            "columnName": "aiResponse",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "model",
            "columnName": "model",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "provider",
            "columnName": "provider",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "context",
            "columnName": "context",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "tokens",
            "columnName": "tokens",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cost",
            "columnName": "cost",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "responseTime",
            "columnName": "responseTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "quality",
            "columnName": "quality",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isBookmarked",
            "columnName": "isBookmarked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "tags",
            "columnName": "tags",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sessionId",
            "columnName": "sessionId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "conversationId",
            "columnName": "conversationId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "temperature",
            "columnName": "temperature",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "maxTokens",
            "columnName": "maxTokens",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "systemPrompt",
            "columnName": "systemPrompt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSuccessful",
            "columnName": "isSuccessful",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "errorMessage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metadata",
            "columnName": "metadata",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '959353e1bc691069bc5e477138dc8a65')"
    ]
  }
}